// <auto-generated />
using Lshp.BaseWebApi.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using MySql.Data.EntityFrameworkCore.Storage.Internal;
using System;

namespace Lshp.BaseWebApi.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    partial class RepositoryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125");

            modelBuilder.Entity("Lshp.BaseWebApi.Data.Entity.Acccess", b =>
                {
                    b.Property<int>("AccessID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AccessType");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int>("Id");

                    b.Property<DateTime?>("InactiveDate");

                    b.Property<DateTime?>("ModifiedDate");

                    b.HasKey("AccessID");

                    b.ToTable("Access");
                });

            modelBuilder.Entity("Lshp.BaseWebApi.Data.Entity.JsonMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedDate");

                    b.Property<DateTime?>("InactiveDate");

                    b.Property<string>("MessageData");

                    b.Property<int>("MessageTypeId");

                    b.Property<DateTime?>("ModifiedDate");

                    b.Property<int>("StatusId");

                    b.Property<string>("SubjectData");

                    b.Property<int>("TemplateId");

                    b.Property<string>("ToEmail");

                    b.HasKey("Id");

                    b.ToTable("jsonmessage");
                });

            modelBuilder.Entity("Lshp.BaseWebApi.Data.Entity.Localization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Culture");

                    b.Property<DateTime?>("InactiveDate");

                    b.Property<string>("Key");

                    b.Property<DateTime?>("ModifiedDate");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.ToTable("Localization");
                });

            modelBuilder.Entity("Lshp.BaseWebApi.Data.Entity.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Content");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<DateTime?>("InactiveDate");

                    b.Property<int>("JsonMessageId");

                    b.Property<int>("MessageTypeId");

                    b.Property<DateTime?>("ModifiedDate");

                    b.Property<int>("RetryCount");

                    b.Property<DateTime?>("SentDate");

                    b.Property<int>("StatusId");

                    b.Property<string>("Subject");

                    b.Property<string>("ToEmail");

                    b.HasKey("Id");

                    b.HasIndex("JsonMessageId");

                    b.HasIndex("MessageTypeId");

                    b.ToTable("messages");
                });

            modelBuilder.Entity("Lshp.BaseWebApi.Data.Entity.MessageType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id");

                    b.Property<string>("Code")
                        .HasColumnName("Code");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<DateTime?>("InactiveDate");

                    b.Property<DateTime?>("ModifiedDate");

                    b.Property<string>("Type")
                        .HasColumnName("Type");

                    b.HasKey("Id");

                    b.ToTable("messagetype");
                });

            modelBuilder.Entity("Lshp.BaseWebApi.Data.Entity.Resource", b =>
                {
                    b.Property<int>("ResourceID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int>("Id");

                    b.Property<DateTime?>("InactiveDate");

                    b.Property<DateTime?>("ModifiedDate");

                    b.Property<int>("OwnerID");

                    b.Property<string>("ResourceDetails");

                    b.Property<string>("ResourceName");

                    b.HasKey("ResourceID");

                    b.HasIndex("OwnerID");

                    b.ToTable("Resource");
                });

            modelBuilder.Entity("Lshp.BaseWebApi.Data.Entity.ShareResource", b =>
                {
                    b.Property<int>("ShareID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessID");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int>("Id");

                    b.Property<DateTime?>("InactiveDate");

                    b.Property<DateTime?>("ModifiedDate");

                    b.Property<int>("ResourceID");

                    b.Property<int>("ShareUserID");

                    b.HasKey("ShareID");

                    b.HasIndex("AccessID");

                    b.HasIndex("ResourceID");

                    b.HasIndex("ShareUserID");

                    b.ToTable("ShareResource");
                });

            modelBuilder.Entity("Lshp.BaseWebApi.Data.Entity.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Code");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<DateTime?>("InactiveDate");

                    b.Property<DateTime?>("ModifiedDate");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Status");
                });

            modelBuilder.Entity("Lshp.BaseWebApi.Data.Entity.Template", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Body");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<DateTime?>("InactiveDate");

                    b.Property<int>("MessageTypeId");

                    b.Property<DateTime?>("ModifiedDate");

                    b.Property<string>("Name");

                    b.Property<string>("Subject");

                    b.HasKey("Id");

                    b.HasIndex("MessageTypeId");

                    b.ToTable("template");
                });

            modelBuilder.Entity("Lshp.BaseWebApi.Data.Entity.UserActionEventLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int>("EventID");

                    b.Property<DateTime?>("InactiveDate");

                    b.Property<string>("LogLevel");

                    b.Property<string>("Message");

                    b.Property<DateTime?>("ModifiedDate");

                    b.Property<string>("RequestData");

                    b.Property<string>("RequestID");

                    b.Property<string>("RequestIP");

                    b.Property<string>("RequestUrl");

                    b.Property<string>("ServerName")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.ToTable("UserActionEventLog");
                });

            modelBuilder.Entity("Lshp.BaseWebApi.Data.Entity.Users", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Email");

                    b.Property<int>("Id");

                    b.Property<DateTime?>("InactiveDate");

                    b.Property<DateTime?>("ModifiedDate");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Lshp.BaseWebApi.Data.Entity.Message", b =>
                {
                    b.HasOne("Lshp.BaseWebApi.Data.Entity.JsonMessage", "JsonMessage")
                        .WithMany()
                        .HasForeignKey("JsonMessageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Lshp.BaseWebApi.Data.Entity.MessageType", "MessageType")
                        .WithMany("Messages")
                        .HasForeignKey("MessageTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Lshp.BaseWebApi.Data.Entity.Resource", b =>
                {
                    b.HasOne("Lshp.BaseWebApi.Data.Entity.Users", "users")
                        .WithMany()
                        .HasForeignKey("OwnerID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Lshp.BaseWebApi.Data.Entity.ShareResource", b =>
                {
                    b.HasOne("Lshp.BaseWebApi.Data.Entity.Acccess", "Acccess")
                        .WithMany()
                        .HasForeignKey("AccessID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Lshp.BaseWebApi.Data.Entity.Resource", "Resource")
                        .WithMany("ShareResource")
                        .HasForeignKey("ResourceID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Lshp.BaseWebApi.Data.Entity.Users", "users")
                        .WithMany("ShareResource")
                        .HasForeignKey("ShareUserID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Lshp.BaseWebApi.Data.Entity.Template", b =>
                {
                    b.HasOne("Lshp.BaseWebApi.Data.Entity.MessageType", "MessageType")
                        .WithMany("Templates")
                        .HasForeignKey("MessageTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
